global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'agentic-ai-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # Node Exporter for host metrics
  - job_name: 'node-exporter'
    scrape_interval: 3m
    scrape_timeout: 50s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_.*'
        target_label: __tmp_keep
        replacement: 'yes'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'

  # Traefik metrics
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8080']
        labels:
          service: 'traefik'
    metrics_path: '/metrics'

  # PostgreSQL metrics via postgres_exporter
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgresql'
          database: 'agentic_ai'

  # Redis metrics via redis_exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'

  # Qdrant metrics
  - job_name: 'qdrant'
    static_configs:
      - targets: ['qdrant:6333']
        labels:
          service: 'qdrant'
    metrics_path: '/metrics'

  # LiteLLM metrics - with proper endpoint checking, routed via Promtail
  - job_name: 'litellm'
    static_configs:
      - targets: ['promtail:9080']
        labels:
          service: 'litellm'
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Promtail metrics
  - job_name: 'promtail'
    static_configs:
      - targets: ['promtail:9080']
        labels:
          service: 'promtail'
    metrics_path: '/metrics'

  # Open WebUI - Using blackbox exporter for health check monitoring
  # Note: Open WebUI uses OpenTelemetry, not direct Prometheus metrics
  - job_name: 'open-webui-health'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - http://open-webui:8080/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Docker daemon metrics via cAdvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
    metrics_path: '/metrics'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
    metrics_path: '/metrics'

  # AlertManager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
        labels:
          service: 'alertmanager'
    metrics_path: '/metrics'