
http:
  middlewares:
    # Security Headers Middleware
    security-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - DELETE
          - PATCH
        accessControlAllowOriginList:
          - "*"
        accessControlAllowHeaders:
          - "*"
        accessControlMaxAge: 100
        addVaryHeader: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        frameDeny: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Real-IP: ""
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
          X-Frame-Options: "DENY"
          X-Content-Type-Options: "nosniff"
          Referrer-Policy: "strict-origin-when-cross-origin"
          Permissions-Policy: "camera=(), microphone=(), geolocation=(), interest-cohort=()"
          server: ""
    
    # Rate Limiting Middlewares
    default-ratelimit:
      rateLimit:
        burst: 100
        average: 50
        period: 1m
        sourceCriterion:
          ipStrategy:
            depth: 1
    
    api-ratelimit:
      rateLimit:
        burst: 200
        average: 100
        period: 1m
        sourceCriterion:
          ipStrategy:
            depth: 1
    
    strict-ratelimit:
      rateLimit:
        burst: 20
        average: 10
        period: 1m
        sourceCriterion:
          ipStrategy:
            depth: 1
    
    # Authentication Middlewares
    basic-auth:
      basicAuth:
        users:
          - "admin:$2y$10$..."  # Will be replaced by setup script
        realm: "Agentic AI System"
        removeHeader: true
    
    # CORS Middleware
    cors-headers:
      headers:
        accessControlAllowOriginList:
          - "https://ai.local"
          - "https://n8n.local"
          - "https://api.local"
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        accessControlAllowHeaders:
          - "*"
        accessControlAllowCredentials: true
        accessControlMaxAge: 86400
        addVaryHeader: true
    
    # IP Whitelist (for admin interfaces)
    admin-whitelist:
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
          - "100.64.0.0/10"  # Tailscale range
    
    # Compression
    compression:
      compress: {}
    
    # Error Pages
    error-pages:
      errors:
        status:
          - "400-599"
        service: error-pages-service
        query: "/{status}.html"
    
    # Redirect to HTTPS
    https-redirect:
      redirectScheme:
        scheme: https
        permanent: true
    
    # Strip Prefix for API routes
    api-strip-prefix:
      stripPrefix:
        prefixes:
          - "/api/v1"
          - "/v1"
    
    # Add Prefix for internal routing
    add-api-prefix:
      addPrefix:
        prefix: "/api"

  # Services for error pages
  services:
    error-pages-service:
      loadBalancer:
        servers:
          - url: "http://error-pages:8080"

# TLS Configuration
tls:
  options:
    default:
      minVersion: "VersionTLS12"
      maxVersion: "VersionTLS13"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
      curvePreferences:
        - CurveP521
        - CurveP384
        - CurveP256
      sniStrict: true
    
    modern:
      minVersion: "VersionTLS13"
      cipherSuites:
        - "TLS_AES_256_GCM_SHA384"
        - "TLS_CHACHA20_POLY1305_SHA256"
        - "TLS_AES_128_GCM_SHA256"
      curvePreferences:
        - CurveP521
        - CurveP384
      sniStrict: true

  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/certs/default.crt
        keyFile: /etc/traefik/certs/default.key

# Certificate configuration
certificatesResolvers:
  letsencrypt:
    acme:
      email: admin@yourdomain.com
      storage: /etc/traefik/certs/acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory
      httpChallenge:
        entryPoint: web
      # DNS challenge configuration (uncomment if using DNS validation)
      # dnsChallenge:
      #   provider: cloudflare
      #   delayBeforeCheck: 60s
      #   resolvers:
      #     - "1.1.1.1:53"
      #     - "8.8.8.8:53"
